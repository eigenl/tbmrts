/*
	The MIT License (MIT)

	Copyright (c) 2013 Eigen Lenk

	Permission is hereby granted, free of charge, to any person obtaining a copy of
	this software and associated documentation files (the "Software"), to deal in
	the Software without restriction, including without limitation the rights to
	use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
	the Software, and to permit persons to whom the Software is furnished to do so,
	subject to the following conditions:

	The above copyright notice and this permission notice shall be included in all
	copies or substantial portions of the Software.

	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
	FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
	COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
	IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
	CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/

var mysql = require('mysql');
var Utils = require('utils');
var config = require("../config.json");

module.exports.init = function()
{
	if (pool == null)
	{
		console.log("Creating MySQL pool");
		
		pool = mysql.createPool({
		  host     : 'localhost',
		  user     : config.db.user,
		  password : config.db.pass,
		  database : config.db.database
		});
	}
}

/*
	Sessions
*/

module.exports.deleteUserSessions = function(userId, callback)
{
	pool.getConnection(function(err, connection)
	{
		if (err)
		{
			console.log(err);
			callback(true);
			return;
		}
		
		var sql = "DELETE FROM sessions WHERE userId = '" + userId + "'";

		connection.query(sql, [], function(err, results)
		{
			connection.release();
			
			if (err)
			{
				console.log(err);
				callback(true);
				return;
			}
			
			callback(false, results);
		});
	});
}

module.exports.insertSession = function(userId, session, callback) {
	pool.getConnection(function(err, connection) {
		if (err) { console.log(err); callback(true); return; }
		var sql = "INSERT INTO sessions (id, userId) VALUES ('" + session + "', '" + userId + "')";
		// console.log("sql query: " + sql);
		connection.query(sql, [], function(err, results) {
			connection.release();
			if (err) { console.log(err); callback(true); return; }
			callback(false, results);
		});
	});
}

module.exports.getSession = function(sessionId, callback) {
	pool.getConnection(function(err, connection) {
		if (err) { console.log(err); callback(true); return; }
		var sql = "SELECT * FROM sessions WHERE id = '" + sessionId + "'";
		// console.log("sql query: " + sql);
		connection.query(sql, [], function(err, results) {
			connection.release();
			if (err) { console.log(err); callback(true); return; }
			callback(false, results);
		});
	});
}

module.exports.deleteSession = function(sessionId, callback) {
	pool.getConnection(function(err, connection) {
		if (err) { console.log(err); callback(true); return; }
		var sql = "DELETE FROM sessions WHERE id = '" + sessionId + "'";
		// console.log("sql query: " + sql);
		connection.query(sql, [], function(err, results) {
			connection.release();
			if (err) { console.log(err); callback(true); return; }
			callback(false, results);
		});
	});
}

/*
	Users
*/

module.exports.insertUser = function(username, password, callback) {
	pool.getConnection(function(err, connection) {
		if (err) { console.log(err); callback(true); return; }
		var sql = "INSERT INTO users (username, password) VALUES ('" + username + "', '" + Utils.SHA1(password) + "')";
		// console.log("sql query: " + sql);
		connection.query(sql, [], function(err, results) {
			connection.release();
			if (err) { console.log(err); callback(true); return; }
			callback(false, results);
		});
	});
}

module.exports.getUserByUsername = function(username, callback) {
	pool.getConnection(function(err, connection) {
		if (err) { console.log(err); callback(true); return; }
		var sql = "SELECT * FROM users WHERE username = '" + username + "'";
		// console.log("sql query: " + sql);
		connection.query(sql, [], function(err, results) {
			connection.release();
			if (err) { console.log(err); callback(true); return; }
			callback(false, results);
		});
	});
}

module.exports.getUserById = function(userId, callback) {
	pool.getConnection(function(err, connection) {
		if (err) { console.log(err); callback(true); return; }
		var sql = "SELECT * FROM users WHERE id = '" + userId + "'";
		// console.log("sql query: " + sql);
		connection.query(sql, [], function(err, results) {
			connection.release();
			if (err) { console.log(err); callback(true); return; }
			callback(false, results);
		});
	});
}

module.exports.getUsers = function(callback) {
	pool.getConnection(function(err, connection) {
		if (err) { console.log(err); callback(true); return; }
		var sql = "SELECT * FROM users";
		connection.query(sql, [], function(err, results) {
			connection.release();
			if (err) { console.log(err); callback(true); return; }
			callback(false, results);
		});
	});
}

module.exports.increaseLosses = function(userId, callback) {
	pool.getConnection(function(err, connection) {
		if (err) { console.log(err); callback(true); return; }
		var sql = "UPDATE users SET losses = losses + 1 WHERE id = '" + userId + "'";
		connection.query(sql, [], function(err, results) {
			connection.release();
			if (err) { console.log(err); callback(true); return; }
			callback(false, results);
		});
	});
}

module.exports.increaseWins = function(userId, callback) {
	pool.getConnection(function(err, connection) {
		if (err) { console.log(err); callback(true); return; }
		var sql = "UPDATE users SET wins = wins + 1 WHERE id = '" + userId + "'";
		connection.query(sql, [], function(err, results) {
			connection.release();
			if (err) { console.log(err); callback(true); return; }
			callback(false, results);
		});
	});
}

var pool = null;